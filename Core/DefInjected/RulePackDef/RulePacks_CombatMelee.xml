<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>r_logentry(p=0.5)->[INITIATOR_definite] [damaged_past] [atMaybe] [RECIPIENT_definite] in the [recipient_part0_label] [deflected_result].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [skillAdvMaybe] [damaged_past] [atMaybe] [RECIPIENT_definite] with [implement] [deflected_result].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [skillAdvMaybe] [damaged_past] [atMaybe] [RECIPIENT_definite] [deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite], [skillDescMelee], [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label] [deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [damaged_inf] from [implement] [deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite] [skillAdvMaybe] used [implement] to [damaged_inf] [RECIPIENT_definite] [deflected_result].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>atMaybe-></li>
    <li>atMaybe->at</li>
    <li>deflected_result->, but the [TOOL_label] [deflected] off [harmlessly_opt]</li>
    <li>deflected_result->, [deflecting] off [RECIPIENT_possessive] armor [harmlessly_opt]</li>
    <li>harmlessly_opt(p=4)-></li>
    <li>harmlessly_opt->[harmlessly]</li>
    <li>harmlessly->harmlessly</li>
    <li>harmlessly->uselessly</li>
    <li>deflected->deflected</li>
    <li>deflected->scraped</li>
    <li>deflected->slid</li>
    <li>deflected->grazed</li>
    <li>deflected->bounced</li>
    <li>deflected->glanced</li>
    <li>deflecting->deflecting</li>
    <li>deflecting->scraping</li>
    <li>deflecting->sliding</li>
    <li>deflecting->grazing</li>
    <li>deflecting->bouncing</li>
    <li>deflecting->glancing</li>
  -->
  <Combat_Deflect.rulePack.rulesStrings>
    <li>r_logentry(p=0.5)->[INITIATOR_definite]は[RECIPIENT_definite]の[recipient_part0_label]を[atMaybe][damaged_past][deflected_result].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite]は[skillAdvMaybe][RECIPIENT_definite]を[implement]で[atMaybe][damaged_past][deflected_result].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite]は[skillAdvMaybe][RECIPIENT_definite]を[atMaybe][damaged_past][deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite]は[RECIPIENT_definite]に[skillDescMelee],そして[recipient_part0_label]を[damaged_past][deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite]は[RECIPIENT_definite]に[implement]を命中させて[damaged_inf][deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite]は[skillAdvMaybe][implement]を使って[RECIPIENT_definite]を[damaged_inf][deflected_result].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>atMaybe-></li>
    <li>atMaybe->狙って</li>
    <li>deflected_result->が,[TOOL_label][deflected][harmlessly_opt]</li>
    <li>deflected_result->が,[RECIPIENT_possessive]アーマー[deflecting][harmlessly_opt]</li>
    <li>harmlessly_opt(p=4)->た</li>
    <li>harmlessly_opt->,[harmlessly]</li>
    <li>harmlessly->害を及ぼさなかった</li>
    <li>harmlessly->無駄になった</li>
    <li>deflected->が逸れ</li>
    <li>deflected->が擦れ</li>
    <li>deflected->を滑らせ</li>
    <li>deflected->が僅かに擦れ</li>
    <li>deflected->が弾かれ</li>
    <li>deflected->が掠め</li>
    <li>deflecting->を逸れ</li>
    <li>deflecting->を擦れ</li>
    <li>deflecting->に滑らせられ</li>
    <li>deflecting->を僅かに擦れ</li>
    <li>deflecting->に弾かれ</li>
    <li>deflecting->を掠め</li>
  </Combat_Deflect.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry(p=0.5)->[RECIPIENT_definite] [skillAdvMaybe] dodged [INITIATOR_definite]'s [damaged_inf] from [implement].</li>
    <li>r_logentry(p=0.5)->[RECIPIENT_definite] [skillAdvMaybe] dodged [INITIATOR_definite]'s [damaged_inf].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>result->but [RECIPIENT_definite] leapt out of the way</li>
    <li>result->but was deceived by [RECIPIENT_definite]'s feint</li>
    <li>result->but the attack was cleverly avoided</li>
  -->
  <Combat_Dodge.rulePack.rulesStrings>
    <li>r_logentry(p=0.5)->[RECIPIENT_definite]は[INITIATOR_definite]の[implement]による[damaged_inf]攻撃を[skillAdvMaybe]よけた.</li>
    <li>r_logentry(p=0.5)->[RECIPIENT_definite]は[INITIATOR_definite]の[damaged_inf]攻撃を[skillAdvMaybe]よけた.</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>result->しかし,[RECIPIENT_definite]は動線から飛び出した</li>
    <li>result->しかし,[RECIPIENT_definite]のフェイント動作で避けられた</li>
    <li>result->しかし,攻撃は巧みによけられた</li>
  </Combat_Dodge.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry(p=1.0)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label] [strikeAdv].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label], [flavortext_consequence].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite], [skillDescMelee], [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite], [skillDescMelee], [strikeAdv] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [destroyed_suffix].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] with [implement].</li>
    <li>r_logentry(p=1,recipient_part_count==0)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] with [implement].</li>
    <li>r_logentry(p=0.4,recipient_part_count==0)->[INITIATOR_definite] [skillAdv] [damaged_past] [RECIPIENT_definite] with [implement].</li>
    <li>result(p=1,recipient_part_damaged_count==0)->[destroyed_present] [RECIPIENT_possessive] [destroyed_targets]</li>
    <li>result(p=1,recipient_part_destroyed_count==0)->[damaged_present] [RECIPIENT_possessive] [damaged_targets]</li>
    <li>result(p=1)->[destroyed_present] [RECIPIENT_possessive] [destroyed_targets] and [damaged_present] [RECIPIENT_possessive] [damaged_targets]</li>
    <li>action(p=1.0)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] with [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite], [skillDescMelee], [damaged_past] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [damaged_inf] from [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite], [skillDescMelee], hit [RECIPIENT_definite] with a [damaged_inf] from [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] used [implement] to [damaged_inf] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] used [implement] [skillAdv] to [damaged_inf] [RECIPIENT_definite]</li>
  -->
  <Combat_Hit.rulePack.rulesStrings>
    <li>r_logentry(p=1.0)->[INITIATOR_definite]は[RECIPIENT_definite]の[recipient_part0_label]を[damaged_past].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite]は[RECIPIENT_definite]の[recipient_part0_label]を[strikeAdv][damaged_past].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite]は[RECIPIENT_definite]の[recipient_part0_label]を[damaged_past],そして[flavortext_consequence].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite]は[RECIPIENT_definite]に[skillDescMelee],そして[recipient_part0_label]を[damaged_past].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite]は[RECIPIENT_definite]に[skillDescMelee],そして[recipient_part0_label]を[strikeAdv][damaged_past].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite]は[RECIPIENT_definite]の[destroyed_targets]を[destroyed_past].</li>
    <!-- combined high priority, if we destroyed something -->
    <li>r_logentry(p=0.4)->[INITIATOR_definite]は[RECIPIENT_definite]の[destroyed_targets]を[destroyed_past],それは[destroyed_suffix]になった.</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite]は[RECIPIENT_definite]の[destroyed_targets]を[implement]で[destroyed_past].</li>
    <li>r_logentry(p=1,recipient_part_count==0)->[INITIATOR_definite]は[RECIPIENT_definite]を[implement]で[damaged_past].</li>
    <li>r_logentry(p=0.4,recipient_part_count==0)->[INITIATOR_definite]は[RECIPIENT_definite]を[implement]で[skillAdv][damaged_past].</li>
    <li>result(p=1,recipient_part_damaged_count==0)->[RECIPIENT_possessive][destroyed_targets]を[destroyed_present]</li>
    <li>result(p=1,recipient_part_destroyed_count==0)->[RECIPIENT_possessive][damaged_targets]を[damaged_present]</li>
    <li>result(p=1)->[RECIPIENT_possessive][destroyed_targets]を[destroyed_present],そして[RECIPIENT_possessive][damaged_targets]を[damaged_present]</li>
    <li>action(p=1.0)->[INITIATOR_definite]は[RECIPIENT_definite]を[implement]で[damaged_past]</li>
    <li>action(p=0.3)->[INITIATOR_definite]は[RECIPIENT_definite]を[damaged_past]</li>
    <li>action(p=0.3)->[INITIATOR_definite]は[RECIPIENT_definite]を[skillDescMelee],そして[damaged_past]</li>
    <li>action(p=0.3)->[INITIATOR_definite]は[RECIPIENT_definite]に[implement]を命中させて[damaged_inf]</li>
    <li>action(p=0.3)->[INITIATOR_definite]は[RECIPIENT_definite]に[skillDescMelee],そして[implement]を命中させて[damaged_inf]</li>
    <li>action(p=0.3)->[INITIATOR_definite]は[RECIPIENT_definite]を[damaged_inf]ために[implement]を使った</li>
    <li>action(p=0.3)->[INITIATOR_definite]は[RECIPIENT_definite]を[damaged_inf]ために[implement]を[skillAdv]使った</li>
  </Combat_Hit.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry(p=0.3)->[RECIPIENT_definite] avoided [INITIATOR_definite]'s [WEAPON_label] [damaged_inf].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] missed [RECIPIENT_definite] with a [damaged_inf] from [implement].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [failtype] while trying to [damaged_inf] [RECIPIENT_definite] with [implement].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [failtype] while trying to [damaged_inf] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] tried [skillAdvMaybe] to [damaged_inf] [RECIPIENT_definite], but [failtype].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>failtype(p=5)->missed</li>
    <li>failtype->stumbled</li>
    <li>failtype->tripped</li>
    <li>failtype->flailed</li>
    <li>failtype->floundered</li>
    <li>result(p=4)->but missed</li>
    <li>result->but hit only air</li>
    <li>result->but the swing went wide</li>
    <li>result->but stumbled at the last second</li>
    <li>result(initiator_flesh!=Mechanoid)->but hesitated at the last second</li>
  -->
  <Combat_Miss.rulePack.rulesStrings>
    <li>r_logentry(p=0.3)->[INITIATOR_definite]は[WEAPON_label]で[damaged_inf],しかし[RECIPIENT_definite]は避けた.</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite]は[implement]で[RECIPIENT_definite]を[damaged_inf],しかし外した.</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite]は[implement]で[RECIPIENT_definite]を[damaged_inf],しかし[failtype].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite]は[RECIPIENT_definite]を[damaged_inf],しかし[failtype].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite]は[skillAdvMaybe][RECIPIENT_definite]を[damaged_inf],しかし[failtype].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>failtype->へまをした</li>
    <li>failtype->つまづいた</li>
    <li>failtype->空振りした</li>
    <li>failtype->もたついた</li>
    <li>failtype->失敗した</li>
    <li>result(p=4)->しかし外した</li>
    <li>result->しかし空を切った</li>
    <li>result->しかし一振りは当たらない</li>
    <li>result->しかし最後の瞬間につまずいた</li>
    <li>result(initiator_flesh!=Mechanoid)->しかし最後の瞬間に躊躇した</li>
  </Combat_Miss.rulePack.rulesStrings>
  
</LanguageData>